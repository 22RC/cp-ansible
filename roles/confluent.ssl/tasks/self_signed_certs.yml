---
- name: Copy CA Cert to Host
  copy:
    src: "generated_ssl_files/{{ssl_self_signed_ca_cert_filename}}"
    dest: "{{ca_cert_path}}"

- name: Copy CA Key to Host
  copy:
    src: "generated_ssl_files/{{ssl_self_signed_ca_key_filename}}"
    dest: "{{ca_key_path}}"

- name: Create Truststore and Import the CA Cert
  shell: |
    keytool -noprompt -keystore {{bcfks_truststore_path}} \
      -storetype BCFKS -storepass {{truststore_storepass}} \
      -alias CARoot -importcert -file {{ca_cert_path}} \
      -providerclass org.bouncycastle.jcajce.provider.BouncyCastleFipsProvider \
      -providerpath {% if installation_method == 'archive' %}{{archive_destination_path}}/confluent-{{confluent_package_version}}/{% else %}/usr/{% endif %}share/java/kafka/bc-fips-*.jar
  register: output

- debug: var=output

- name: Create Keystore
  shell: |
    keytool -keystore {{bcfks_keystore_path}} -alias localhost \
      -validity 720 -genkeypair -keyalg RSA -keysize 2048 \
      -storepass {{keystore_storepass}} -keypass {{keystore_storepass}} \
      -storetype BCFKS \
      -dname "CN={{service_name}},OU=TEST,O=CONFLUENT,L=PaloAlto,S=Ca,C=US" \
      -ext "SAN={{hostnames | cert_extension}}" \
      -providerclass org.bouncycastle.jcajce.provider.BouncyCastleFipsProvider \
      -providerpath {% if installation_method == 'archive' %}{{archive_destination_path}}/confluent-{{confluent_package_version}}/{% else %}/usr/{% endif %}share/java/kafka/bc-fips-*.jar
  register: output

- debug: var=output

# - name: Export Key from Keystore
#   shell: |
#     openssl pkcs12 \
#         -in {{keystore_path}} \
#         -passin pass:{{keystore_storepass}} \
#         -nodes -nocerts \
#         -out {{key_path}}
#   when: export_certs|bool

- name: Create Certificate Signing Request
  shell: |
    keytool -keystore {{bcfks_keystore_path}} -alias localhost \
      -storepass {{keystore_storepass}} -keypass {{keystore_storepass}} \
      -storetype BCFKS -certreq -file /var/ssl/private/generation/client.csr \
      -providerclass org.bouncycastle.jcajce.provider.BouncyCastleFipsProvider \
      -providerpath {% if installation_method == 'archive' %}{{archive_destination_path}}/confluent-{{confluent_package_version}}/{% else %}/usr/{% endif %}share/java/kafka/bc-fips-*.jar
  register: output

- debug: var=output

- name: Create Openssl Config for SAN
  template:
    src: openssl-san.cnf.j2
    dest: /var/ssl/private/generation/openssl-san.cnf

- name: Sign CSR with the Certificate Authority
  shell: |
    openssl x509 -req -CA {{ca_cert_path}} -CAkey {{ca_key_path}} \
      -in /var/ssl/private/generation/client.csr -out {{cert_path}} \
      -days 720 -CAcreateserial -passin pass:{{ssl_self_signed_ca_password}} \
      -extfile /var/ssl/private/generation/openssl-san.cnf \
      -extensions v3_req
  register: output

- debug: var=output

- name: Import the CA cert into the Keystore
  shell: |
    keytool -noprompt -keystore {{bcfks_keystore_path}} -storetype BCFKS \
      -alias CARoot -import -file {{ca_cert_path}} -storepass {{keystore_storepass}} \
      -providerclass org.bouncycastle.jcajce.provider.BouncyCastleFipsProvider \
      -providerpath {% if installation_method == 'archive' %}{{archive_destination_path}}/confluent-{{confluent_package_version}}/{% else %}/usr/{% endif %}share/java/kafka/bc-fips-*.jar
  register: output

- debug: var=output

- name: Create Cert Chain
  shell: |
    cat {{ca_cert_path}} {{cert_path}} > /var/ssl/private/generation/signed-cert-chain.crt

- name: Import the Signed Host Cert into the Keystore
  shell: |
    keytool -keystore {{bcfks_keystore_path}} -storetype BCFKS \
      -storepass {{keystore_storepass}} -alias localhost -import -file /var/ssl/private/generation/signed-cert-chain.crt \
      -noprompt \
      -providerclass org.bouncycastle.jcajce.provider.BouncyCastleFipsProvider \
      -providerpath {% if installation_method == 'archive' %}{{archive_destination_path}}/confluent-{{confluent_package_version}}/{% else %}/usr/{% endif %}share/java/kafka/bc-fips-*.jar
  register: output

- debug: var=output

# - name: Convert Keystore to BCFKS - FIPS
#   shell: |
#     keytool -importkeystore -v \
#       -srckeystore {{bcfks_keystore_path}} \
#       -srcstorepass {{keystore_storepass}} \
#       -srcalias {{inventory_hostname}} \
#       -srcstoretype BCFKS \
#       -destkeystore {{keystore_path}} \
#       -deststorepass {{keystore_storepass}} \
#       -destalias {{inventory_hostname}}  \
#       -deststoretype PKCS12 \
#       -providername BCFIPS \
#       -providerclass org.bouncycastle.jcajce.provider.BouncyCastleFipsProvider \
#       -providerpath {% if installation_method == 'archive' %}{{archive_destination_path}}/confluent-{{confluent_package_version}}/{% else %}/usr/{% endif %}share/java/kafka/bc-fips-*.jar
#   when: convert_to_bcfks|bool
