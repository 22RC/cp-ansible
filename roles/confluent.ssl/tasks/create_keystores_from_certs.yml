---
- name: Count Certificates in Ca Cert
  shell: |
    grep -c "END CERTIFICATE" {{ca_cert_path}}
  check_mode: false
  register: ca_cert_count_grep

- name: Set the Certificate Count Var
  set_fact:
    cert_count: "{{ca_cert_count_grep.stdout}}"

- name: Create Truststore and Import the CA Chain
  include_tasks: import_ca_chain.yml
  when: cert_count|int > 1

- name: Create Truststore and Import the CA Cert
  shell: |
    keytool -noprompt -keystore {{truststore_path}} \
      -storetype pkcs12 \
      -alias CARoot \
      -import -file {{ca_cert_path}} \
      -storepass {{truststore_storepass}} \
      -keypass {{truststore_storepass}}
  when: cert_count|int == 1

- name: Create BCFKS Truststore and Import the CA Cert
  shell: |
    keytool -noprompt -keystore {{truststore_path}} \
      -storetype BCFKS \
      -alias CARoot \
      -import -file {{ca_cert_path}} \
      -storepass {{truststore_storepass}} \
      -keypass {{truststore_storepass}}
      -providerclass org.bouncycastle.jcajce.provider.BouncyCastleFipsProvider \
      -providerpath {% if installation_method == 'archive' %}{{archive_destination_path}}/confluent-{{confluent_package_version}}/{% else %}/usr/{% endif %}share/java/kafka/bc-fips-*.jar
  when:
    - cert_count|int == 1
    - convert_to_bcfks|bool

- name: Create Cert Chain
  shell: |
    cat {{ca_cert_path}} {{cert_path}} > /var/ssl/private/generation/signed-cert-chain.crt

- name: Create Temporary PKCS12 File with Key and Signed Cert Chain
  shell: |
    openssl pkcs12 -export \
      -in /var/ssl/private/generation/signed-cert-chain.crt \
      -inkey {{key_path}} \
      {% if ssl_key_password is defined %}-passin pass:{{ssl_key_password}}{% endif %} \
      -out /var/ssl/private/generation/client.p12 \
      -name localhost \
      -CAfile /var/ssl/private/ca.crt -caname CARoot \
      -passout pass:mykeypassword

- name: Create Keystore
  shell: |
    keytool -importkeystore \
      -srckeystore /var/ssl/private/generation/client.p12 \
      -srcstoretype pkcs12 \
      -srcstorepass mykeypassword \
      -destkeystore {{keystore_path}} \
      -deststoretype pkcs12 \
      -deststorepass {{keystore_storepass}} \
      -destkeypass {{keystore_storepass}}

- name: Create BCFKS Keystore
  shell: |
    keytool -importkeystore \
      -srckeystore /var/ssl/private/generation/client.p12 \
      -srcstoretype pkcs12 \
      -srcstorepass mykeypassword \
      -destkeystore {{bcfks_keystore_path}} \
      -deststorepass {{keystore_storepass}} \
      -destkeypass {{keystore_storepass}} \
      -destalias localhost  \
      -deststoretype BCFKS \
      -providername BCFIPS \
      -providerclass org.bouncycastle.jcajce.provider.BouncyCastleFipsProvider \
      -providerpath {% if installation_method == 'archive' %}{{archive_destination_path}}/confluent-{{confluent_package_version}}/{% else %}/usr/{% endif %}share/java/kafka/bc-fips-*.jar
  when: convert_to_bcfks|bool


# - name: Create Keystore with Key and Signed Cert Chain
#   shell: |
#     openssl pkcs12 -export \
#       -in /var/ssl/private/generation/signed-cert-chain.crt \
#       -inkey {{key_path}} \
#       {% if ssl_key_password is defined %}-passin pass:{{ssl_key_password}}{% endif %} \
#       -chain -out {{keystore_path}} \
#       -name localhost \
#       -CAfile /var/ssl/private/ca.crt -caname CARoot \
#       -password pass:{{keystore_storepass}}

- name: Import the CA cert into the Keystore
  shell: |
    keytool -noprompt -keystore {{keystore_path}} \
      -storetype pkcs12 \
      -alias CARoot \
      -import -file {{ca_cert_path}} \
      -storepass {{keystore_storepass}}

  #  \
  # -keypass {{keystore_storepass}}

- name: Import the CA cert into the BCFKS Keystore
  shell: |
    keytool -noprompt -keystore {{bcfks_keystore_path}} \
      -storetype pkcs12 \
      -alias CARoot \
      -import -file {{ca_cert_path}} \
      -storepass {{keystore_storepass}}
  when: convert_to_bcfks|bool


# - name: Create Keystore
#   shell: |
#     keytool -importkeystore \
#       -srckeystore /var/ssl/private/generation/client.p12 \
#       -srcstoretype pkcs12 \
#       -srcstorepass mykeypassword \
#       -destkeystore {{keystore_path}} \
#       -deststoretype pkcs12 \
#       -deststorepass {{keystore_storepass}} \
#       -destkeypass {{keystore_storepass}}
#
# - name: Import the CA Cert into Keystore
#   shell: |
#     keytool -noprompt -keystore {{keystore_path}} \
#       -storetype pkcs12 \
#       -alias CARoot \
#       -import -file {{ca_cert_path}} \
#       -storepass {{keystore_storepass}} \
#       -keypass {{keystore_storepass}}
#
#
#
# - name: Convert Keystore to BCFKS - FIPS
#   shell: |
#     keytool -importkeystore -v \
#       -srckeystore {{keystore_path}} \
#       -srcstorepass {{keystore_storepass}} \
#       -srcalias kafkassl \
#       -srcstoretype PKCS12 \
#       -destkeystore {{bcfks_keystore_path}} \
#       -deststorepass {{keystore_storepass}} \
#       -destalias {{inventory_hostname}}  \
#       -deststoretype BCFKS \
#       -providername BCFIPS \
#       -providerclass org.bouncycastle.jcajce.provider.BouncyCastleFipsProvider \
#       -providerpath {% if installation_method == 'archive' %}{{archive_destination_path}}/confluent-{{confluent_package_version}}/{% else %}/usr/{% endif %}share/java/kafka/bc-fips-*.jar
#   when: convert_to_bcfks|bool
