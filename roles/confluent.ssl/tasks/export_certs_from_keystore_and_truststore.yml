---
- name: Export CA Cert from Truststore
  shell: |
    keytool -exportcert -rfc \
      -alias "{{ssl_truststore_ca_cert_alias}}" \
      -storepass {{truststore_storepass}}  \
      -file {{ca_cert_path}} \
      -keystore {{truststore_path}}
  when: export_certs|bool

- name: Get Truststore Type
  shell: |
    keytool -list -keystore {{truststore_path}} \
      -storepass {{truststore_storepass}} -v \
      | grep "Keystore type" \
      | cut -d ":" -f2 \
      | cut -c2-
  register: truststore_type
  when: convert_to_bcfks|default(False)|bool

- debug: var=truststore_type

- name: Convert Truststore to BCFKS - FIPS
  shell: |
    keytool -importkeystore -v \
      -srckeystore {{truststore_path}} \
      -srcstorepass {{truststore_storepass}} \
      -srcalias {{ssl_truststore_ca_cert_alias}} \
      -srcstoretype {{truststore_type.stdout}} \
      -destkeystore {{bcfks_truststore_path}} \
      -deststorepass {{truststore_storepass}} \
      -destalias {{ssl_truststore_ca_cert_alias}} \
      -deststoretype BCFKS \
      -providername BCFIPS \
      -providerclass org.bouncycastle.jcajce.provider.BouncyCastleFipsProvider \
      -providerpath /usr/share/java/kafka/bc-fips-*.jar
  when: convert_to_bcfks|default(False)|bool
  register: result

- debug: var=result

- name: Get Keystore Type
  shell: |
    keytool -list -keystore {{keystore_path}} \
      -storepass {{keystore_storepass}} -v \
      | grep "Keystore type" \
      | cut -d ":" -f2 \
      | cut -c2-
  register: keytool_type
  when: export_certs|bool or convert_to_bcfks|default(False)|bool

- debug: var=keytool_type

- name: Convert Keystore to BCFKS - FIPS
  shell: |
    keytool -importkeystore -v \
      -srckeystore {{keystore_path}} \
      -srcstorepass {{keystore_storepass}} \
      -srcalias {{ssl_keystore_alias}} \
      -srcstoretype {{keytool_type.stdout}} \
      -destkeystore {{bcfks_keystore_path}} \
      -deststorepass {{keystore_storepass}} \
      -destalias {{ssl_keystore_alias}} \
      -deststoretype BCFKS \
      -providername BCFIPS \
      -providerclass org.bouncycastle.jcajce.provider.BouncyCastleFipsProvider \
      -providerpath /usr/share/java/kafka/bc-fips-*.jar
  when: convert_to_bcfks|default(False)|bool
  register: result

- debug: var=result

- name: Export Certificate from Keystore - PKCS12
  shell: |
    openssl pkcs12 -in {{keystore_path}} \
      -nokeys -out {{cert_path}} \
      -passin pass:{{keystore_storepass}}
  when:
    - keytool_type.stdout == 'PKCS12'
    - export_certs|bool

- name: Export Key from Keystore - PKCS12
  shell: |
    openssl pkcs12 -in {{keystore_path}} \
      -nodes -nocerts -out {{key_path}} \
      -passin pass:{{keystore_storepass}}
  when:
    - keytool_type.stdout == 'PKCS12'
    - export_certs|bool

- name: Convert Keystore to Pem Format - JKS
  shell: |
    keytool -noprompt -importkeystore \
      -srckeystore {{keystore_path}} \
      -srcstorepass {{keystore_storepass}}{% if ssl_keystore_alias|length > 0 %} -srcalias {{ssl_keystore_alias}} {% endif %} \
      -destkeystore /var/ssl/private/generation/{{service_name}}.p12 \
      -deststoretype PKCS12 \
      -deststorepass {{keystore_storepass}} \
      -destkeypass {{keystore_storepass}}
  failed_when: false
  when:
    - keytool_type.stdout == 'jks'
    - export_certs|bool

- name: Export Certificate from Keystore - JKS
  shell: |
    openssl pkcs12 -in /var/ssl/private/generation/{{service_name}}.p12 \
      -nokeys -out {{cert_path}} \
      -passin pass:{{keystore_storepass}}
  when:
    - keytool_type.stdout == 'jks'
    - export_certs|bool

- name: Export Key from Keystore - JKS
  shell: |
    openssl pkcs12 -in /var/ssl/private/generation/{{service_name}}.p12 \
      -nodes -nocerts -out {{key_path}} \
      -passin pass:{{keystore_storepass}}
  when:
    - keytool_type.stdout == 'jks'
    - export_certs|bool
