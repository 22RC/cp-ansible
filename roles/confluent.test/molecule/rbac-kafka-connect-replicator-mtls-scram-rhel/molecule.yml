### rbac-replicator-mtls-scram-rhel
##
##  Tests replicator over mTLS and SCRAM TLS with RBAC enabled
##
---
driver:
  name: docker
platforms:
  - name: mds-kerberos1
    hostname: mds-kerberos1.confluent
    groups:
      - kerberos_server
    image: geerlingguy/docker-centos7-ansible
    dockerfile: ../Dockerfile.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: mds-zookeeper1
    hostname: mds-zookeeper1.confluent
    groups:
      - zookeeper
      - mds
    image: geerlingguy/docker-centos7-ansible
    dockerfile: ../Dockerfile.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: mds-kafka-broker1
    hostname: mds-kafka-broker1.confluent
    groups:
      - kafka_broker
      - mds
    image: geerlingguy/docker-centos7-ansible
    dockerfile: ../Dockerfile.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: mds-kafka-broker2
    hostname: mds-kafka-broker2.confluent
    groups:
      - kafka_broker
      - mds
    image: geerlingguy/docker-centos7-ansible
    dockerfile: ../Dockerfile.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: mds-kafka-broker3
    hostname: mds-kafka-broker3.confluent
    groups:
      - kafka_broker
      - mds
    image: geerlingguy/docker-centos7-ansible
    dockerfile: ../Dockerfile.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  # Cluster 2 goups, groupnames will be changed during converge phase
  - name: zookeeper1
    hostname: zookeeper1.confluent
    groups:
      - zookeeper2
      - cluster2
    image: geerlingguy/docker-centos7-ansible
    dockerfile: ../Dockerfile.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-broker1
    hostname: kafka-broker1.confluent
    groups:
      - kafka_broker2
      - cluster2
    image: geerlingguy/docker-centos7-ansible
    dockerfile: ../Dockerfile.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-broker2
    hostname: kafka-broker2.confluent
    groups:
      - kafka_broker2
      - cluster2
    image: geerlingguy/docker-centos7-ansible
    dockerfile: ../Dockerfile.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-broker3
    hostname: kafka-broker3.confluent
    groups:
      - kafka_broker2
      - cluster2
    image: geerlingguy/docker-centos7-ansible
    dockerfile: ../Dockerfile.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-connect-replicator1
    hostname: kafka_connect_replicator1.confluent
    groups:
      - kafka_connect_replicator2
      - cluster2
    image: geerlingguy/docker-centos7-ansible
    dockerfile: ../Dockerfile.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
provisioner:
  name: ansible
  config_options:
    defaults:
      hash_behaviour: merge
  inventory:
    group_vars:
      all:
        scenario_name: rbac-kafka-connect-replicator-mtls-scram-rhel

        rbac_enabled: true

        create_mds_certs: false
        token_services_public_pem_file: "roles/confluent.test/molecule/{{scenario_name}}/generated_ssl_files/public.pem"
        token_services_private_pem_file: "roles/confluent.test/molecule/{{scenario_name}}/generated_ssl_files/tokenKeypair.pem"

        mds_super_user: mds
        mds_super_user_password: password

        kafka_broker_ldap_user: kafka_broker
        kafka_broker_ldap_password: password

        schema_registry_ldap_user: schema_registry
        schema_registry_ldap_password: password

        kafka_connect_ldap_user: kafka_connect
        kafka_connect_ldap_password: password

        ksql_ldap_user: ksql
        ksql_ldap_password: password

        kafka_rest_ldap_user: kafka_rest
        kafka_rest_ldap_password: password

        control_center_ldap_user: control_center
        control_center_ldap_password: password

        rbac_component_additional_system_admins:
          - user1


      mds:
        ssl_enabled: true
        ssl_custom_certs: true
        ssl_mutual_auth_enabled: true
        # Paths relative to all.yml
        ssl_ca_cert_filepath: "roles/confluent.test/molecule/{{scenario_name}}/generated_ssl_files/ca.crt"
        ssl_signed_cert_filepath: "roles/confluent.test/molecule/{{scenario_name}}/generated_ssl_files/{{inventory_hostname}}-ca1-signed.crt"
        ssl_key_filepath: "roles/confluent.test/molecule/{{scenario_name}}/generated_ssl_files/{{inventory_hostname}}-key.pem"
        ssl_key_password: keypass

        

        kafka_broker_custom_properties:
          ldap.java.naming.factory.initial: com.sun.jndi.ldap.LdapCtxFactory
          ldap.com.sun.jndi.ldap.read.timeout: 3000
          ldap.java.naming.provider.url: ldap://mds-ldap1:389
          ldap.java.naming.security.principal: uid=mds,OU=rbac,DC=example,DC=com
          ldap.java.naming.security.credentials: password
          ldap.java.naming.security.authentication: simple
          ldap.user.search.base: OU=rbac,DC=example,DC=com
          ldap.group.search.base: OU=rbac,DC=example,DC=com
          ldap.user.name.attribute: uid
          ldap.user.memberof.attribute.pattern: CN=(.*),OU=rbac,DC=example,DC=com
          ldap.group.name.attribute: cn
          ldap.group.member.attribute.pattern: CN=(.*),OU=rbac,DC=example,DC=com
          ldap.user.object.class: account


      cluster2:

        sasl_protocol: scram
        ssl_enabled: true
        ssl_custom_certs: true
        # Paths relative to all.yml
        ssl_ca_cert_filepath: "roles/confluent.test/molecule/{{scenario_name}}/generated_ssl_files/ca.crt"
        ssl_signed_cert_filepath: "roles/confluent.test/molecule/{{scenario_name}}/generated_ssl_files/{{inventory_hostname}}-ca1-signed.crt"
        ssl_key_filepath: "roles/confluent.test/molecule/{{scenario_name}}/generated_ssl_files/{{inventory_hostname}}-key.pem"
        ssl_key_password: keypass

        external_mds_enabled: true

        mds_broker_bootstrap_servers: mds-kafka-broker1:9093,mds-kafka-broker2:9093
        mds_bootstrap_server_urls: https://mds-kafka-broker1:8090,https://mds-kafka-broker2:8090

      ldap_server:
        ldaps_enabled: true
        ldaps_custom_certs: true
        ssl_custom_certs: true
        ssl_ca_cert_filepath: "{{scenario_name}}/generated_ssl_files/ca.crt"
        ssl_signed_cert_filepath: "{{scenario_name}}/generated_ssl_files/{{inventory_hostname}}-ca1-signed.crt"
        ssl_key_filepath: "{{scenario_name}}/generated_ssl_files/{{inventory_hostname}}-key.pem"

        ldap_admin_password: ldppassword

        ldap_rbac_group: rbac
        ldap_dc: example
        ldap_dc_extension: com

        ldap_users:
          - username: "{{kafka_broker_ldap_user}}"
            password: "{{kafka_broker_ldap_password}}"
            uid: 9999
            guid: 99
          - username: "{{schema_registry_ldap_user}}"
            password: "{{schema_registry_ldap_password}}"
            uid: 9998
            guid: 98
          - username: "{{kafka_connect_ldap_user}}"
            password: "{{kafka_connect_ldap_password}}"
            uid: 9997
            guid: 97
          - username: "{{ksql_ldap_user}}"
            password: "{{ksql_ldap_password}}"
            uid: 9996
            guid: 96
          - username: "{{control_center_ldap_user}}"
            password: "{{control_center_ldap_password}}"
            uid: 9995
            guid: 95
          - username: "{{kafka_rest_ldap_user}}"
            password: "{{kafka_rest_ldap_password}}"
            uid: 9994
            guid: 94
          - username: "{{mds_super_user}}"
            password: "{{mds_super_user_password}}"
            uid: 9993
            guid: 93
          - username: user1
            password: user1p
            uid: 9992
            guid: 92

      kafka_connect_replicator:

        kafka_connect_replicator_listener:
          ssl_enabled: true
          ssl_mutual_auth_enabled: false
          sasl_protocol: scram

        kafka_connect_replicator_white_list: test-replicator-source
        kafka_connect_replicator_bootstrap_servers: kafka-broker1:9092
        kafka_connect_replicator_ssl_ca_cert_path: "roles/confluent.test/molecule/{{scenario_name}}/generated_ssl_files/ca.crt"
        kafka_connect_replicator_ssl_cert_path: "roles/confluent.test/molecule/{{scenario_name}}/generated_ssl_files/{{inventory_hostname}}-ca1-signed.crt"
        kafka_connect_replicator_ssl_key_path: "roles/confluent.test/molecule/{{scenario_name}}/generated_ssl_files/{{inventory_hostname}}-key.pem"
        kafka_connect_replicator_ssl_key_password: keypass

        kafka_connect_replicator_erp_host: https://mds-kafka-broker1:8090,https://mds-kafka-broker2:8090
        kafka_connect_replicator_erp_admin_user: mds
        kafka_connect_replicator_erp_admin_password: password
        kafka_connect_replicator_kafka_cluster_id:
        kafka_connect_replicator_erp_pem_file: "roles/confluent.test/molecule/{{scenario_name}}/generated_ssl_files/public.pem"

  

        kafka_connect_replicator_consumer_listener:
          ssl_enabled: true
          ssl_mutual_auth_enabled: true
          sasl_protocol: none

        kafka_connect_replicator_consumer_bootstrap_servers: mds-kafka-broker1:9092
        # Validating these vars default properly
        # kafka_connect_replicator_consumer_ssl_ca_cert_path: "roles/confluent.test/molecule/{{scenario_name}}/generated_ssl_files/ca.crt"
        # kafka_connect_replicator_consumer_ssl_cert_path: "roles/confluent.test/molecule/{{scenario_name}}/generated_ssl_files/{{inventory_hostname}}-ca1-signed.crt"
        # kafka_connect_replicator_consumer_ssl_key_path: "roles/confluent.test/molecule/{{scenario_name}}/generated_ssl_files/{{inventory_hostname}}-key.pem"
        # kafka_connect_replicator_consumer_ssl_key_password: keypass
        kafka_connect_replicator_consumer_custom_properties:
          client.id: consumer-test
        
        kafka_connect_replicator_consumer_erp_host: https://mds-kafka-broker1:8090,https://mds-kafka-broker2:8090
        kafka_connect_replicator_consumer_erp_admin_user: mds
        kafka_connect_replicator_consumer_erp_admin_password: password
        kafka_connect_replicator_consumer_kafka_cluster_id:
        kafka_connect_replicator_consumer_erp_pem_file: "roles/confluent.test/molecule/{{scenario_name}}/generated_ssl_files/public.pem"

        kafka_connect_replicator_producer_listener:
          ssl_enabled: true
          ssl_mutual_auth_enabled: false
          sasl_protocol: scram

        kafka_connect_replicator_producer_bootstrap_servers: kafka-broker1:9092
        kafka_connect_replicator_producer_ssl_ca_cert_path: "roles/confluent.test/molecule/{{scenario_name}}/generated_ssl_files/ca.crt"
        kafka_connect_replicator_producer_ssl_cert_path: "roles/confluent.test/molecule/{{scenario_name}}/generated_ssl_files/{{inventory_hostname}}-ca1-signed.crt"
        kafka_connect_replicator_producer_ssl_key_path: "roles/confluent.test/molecule/{{scenario_name}}/generated_ssl_files/{{inventory_hostname}}-key.pem"
        kafka_connect_replicator_producer_ssl_key_password: keypass
        kafka_connect_replicator_producer_custom_properties:
          client.id: producer-test

        kafka_connect_replicator_monitoring_interceptor_listener:
          ssl_enabled: true
          ssl_mutual_auth_enabled: false
          sasl_protocol: scram

        kafka_connect_replicator_monitoring_interceptor_bootstrap_servers: kafka-broker1:9092
        # Testing these variables default properly
        # kafka_connect_replicator_monitoring_interceptor_ssl_ca_cert_path: "roles/confluent.test/molecule/{{scenario_name}}/generated_ssl_files/ca.crt"
        # kafka_connect_replicator_monitoring_interceptor_ssl_cert_path: "roles/confluent.test/molecule/{{scenario_name}}/generated_ssl_files/{{inventory_hostname}}-ca1-signed.crt"
        # kafka_connect_replicator_monitoring_interceptor_ssl_key_path: "roles/confluent.test/molecule/{{scenario_name}}/generated_ssl_files/{{inventory_hostname}}-key.pem"
        # kafka_connect_replicator_monitoring_interceptor_ssl_key_password: keypass

verifier:
  name: ansible
scenario:
  test_sequence:
    - lint
    - dependency
    - cleanup
    - destroy
    - syntax
    - create
    - prepare
    - converge
    # - idempotence
    - side_effect
    - verify
    - cleanup
    - destroy
