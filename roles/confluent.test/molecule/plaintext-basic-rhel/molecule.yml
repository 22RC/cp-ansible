---
driver:
  name: docker
platforms:
  # Unset env vars resolve to the empty string
  - name: zookeeper1${JOB_BASE_NAME}${BUILD_NUMBER}
    hostname: zookeeper1${JOB_BASE_NAME}${BUILD_NUMBER}.confluent${JOB_BASE_NAME}${BUILD_NUMBER}
    groups:
      - zookeeper
    image: geerlingguy/docker-centos7-ansible
    dockerfile: ../Dockerfile.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent${JOB_BASE_NAME}${BUILD_NUMBER}
  - name: kafka-broker1${JOB_BASE_NAME}${BUILD_NUMBER}
    hostname: kafka-broker1${JOB_BASE_NAME}${BUILD_NUMBER}.confluent${JOB_BASE_NAME}${BUILD_NUMBER}
    groups:
      - kafka_broker
    image: geerlingguy/docker-centos7-ansible
    dockerfile: ../Dockerfile.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent${JOB_BASE_NAME}${BUILD_NUMBER}
  - name: schema-registry1${JOB_BASE_NAME}${BUILD_NUMBER}
    hostname: schema-registry1${JOB_BASE_NAME}${BUILD_NUMBER}.confluent${JOB_BASE_NAME}${BUILD_NUMBER}
    groups:
      - schema_registry
    image: geerlingguy/docker-centos7-ansible
    dockerfile: ../Dockerfile.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent${JOB_BASE_NAME}${BUILD_NUMBER}
  - name: kafka-rest1${JOB_BASE_NAME}${BUILD_NUMBER}
    hostname: kafka-rest1${JOB_BASE_NAME}${BUILD_NUMBER}.confluent${JOB_BASE_NAME}${BUILD_NUMBER}
    groups:
      - kafka_rest
    image: geerlingguy/docker-centos7-ansible
    dockerfile: ../Dockerfile.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent${JOB_BASE_NAME}${BUILD_NUMBER}
  - name: kafka-connect1${JOB_BASE_NAME}${BUILD_NUMBER}
    hostname: kafka-connect1${JOB_BASE_NAME}${BUILD_NUMBER}.confluent${JOB_BASE_NAME}${BUILD_NUMBER}
    groups:
      - kafka_connect
    image: geerlingguy/docker-centos7-ansible
    dockerfile: ../Dockerfile.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent${JOB_BASE_NAME}${BUILD_NUMBER}
  - name: ksql1${JOB_BASE_NAME}${BUILD_NUMBER}
    hostname: ksql1${JOB_BASE_NAME}${BUILD_NUMBER}.confluent${JOB_BASE_NAME}${BUILD_NUMBER}
    groups:
      - ksql
    image: geerlingguy/docker-centos7-ansible
    dockerfile: ../Dockerfile.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent${JOB_BASE_NAME}${BUILD_NUMBER}
  - name: control-center1${JOB_BASE_NAME}${BUILD_NUMBER}
    hostname: control-center1${JOB_BASE_NAME}${BUILD_NUMBER}.confluent${JOB_BASE_NAME}${BUILD_NUMBER}
    groups:
      - control_center
    image: geerlingguy/docker-centos7-ansible
    dockerfile: ../Dockerfile.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    ## Commenting below to avoid port collision on jenkins server
    ## Uncomment to view c3 in browser at localhost:9021
    published_ports:
      - "9021:9021"
    networks:
      - name: confluent${JOB_BASE_NAME}${BUILD_NUMBER}
provisioner:
  name: ansible
  config_options:
    defaults:
      hash_behaviour: merge
  playbooks:
    converge: ../../../../all.yml
  inventory:
    group_vars:
      all:
        scenario_name: plaintext-basic-rhel

        # Kafka Rest API Basic Auth
        kafka_broker_copy_files:
          - source_path: "roles/confluent.test/molecule/{{scenario_name}}/password.properties"
            destination_path: /etc/kafka-rest/password.properties
          - source_path: "roles/confluent.test/molecule/{{scenario_name}}/rest-jaas.properties"
            destination_path: /etc/kafka-rest/rest-jaas.properties

        kafka_broker_custom_properties:
          kafka.rest.resource.extension.class: io.confluent.kafkarest.security.KafkaRestSecurityResourceExtension
          kafka.rest.confluent.rest.auth.propogate.method: JETTY_AUTH
          kafka.rest.authentication.method: BASIC
          kafka.rest.authentication.realm: KafkaRest
          kafka.rest.authentication.roles: thisismyrole
          confluent.balancer.enable: 'true'

        kafka_broker_custom_java_args: "-Djava.security.auth.login.config=/etc/kafka-rest/rest-jaas.properties"

        kafka_broker_rest_health_check_user: thisismyusername
        kafka_broker_rest_health_check_password: thisismypass

        schema_registry_authentication_type: basic
        kafka_connect_authentication_type: basic
        ksql_authentication_type: basic
        kafka_rest_authentication_type: basic
        control_center_authentication_type: basic

verifier:
  name: ansible
lint: |
  set -e
  yamllint -c ../../.yamllint ../..
scenario:
  test_sequence:
    - lint
    - dependency
    - cleanup
    - destroy
    - syntax
    - create
    - prepare
    - converge
    # - idempotence
    - side_effect
    - verify
    - cleanup
    - destroy
